/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package McDonaldOrderingSystem;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanele
 */
public class frmDisplayOrderDetailsForKitchenInterface extends javax.swing.JFrame {

    /**
     * Creates new form frmDisplayOrderDetailsForKitchenInterface
     */
    public frmDisplayOrderDetailsForKitchenInterface() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        frmDisplayOrderDetailsForWaiterInterface frmDisplay = 
        new frmDisplayOrderDetailsForWaiterInterface(); //Instantiation of an object of the waiter interface
        frmDisplay.mReadOrderFile(frmDisplay.mPath());
        frmDisplay.mGetOrderData();
        mTable(frmDisplay.arrOrderData);
    }
    
    //A method that diplays file contents on a JTable
    private void mTable(String[] arrData) {
        
        DefaultTableModel dmModel = (DefaultTableModel)tblOrder.getModel();
        tblOrder = new JTable((DefaultTableModel)tblOrder.getModel());
                        
        String[] arrRowData = new String[arrData.length];
        for(int i = 0; i < arrRowData.length; i++) {
            arrRowData[i] = arrData[i];
        }
        
        dmModel.addRow(mSortForKitchenInterface(arrRowData));
                
    }
    
    //A method that returns as an array of type String the values to be displayed on this interface 
    private String[] mSortForKitchenInterface(String[] arrRowData) {
        String[] arrMenuOptions = new String[]{ 
          "Pork", "Prawns", "Forest", "Neptune",
            "Coca Cola", "Olympus"
        };
        
        int intOrderCount = 0; //Declaration and initialisation of an integer variable for storing number of ordered dishes
        for(int i = 0; i < arrRowData.length; i++) {
            for(int index = 0; index < arrMenuOptions.length; index++) {
                if(arrRowData[i].contains(arrMenuOptions[index])){
                    intOrderCount++;
                }
            }
        }
        String[] arrSorted = new String[intOrderCount + 1]; //An array of type string to store dishes ordered and number of guests
        
        StringBuilder builder = new StringBuilder(); //A string builder to store all order details
        for(int i = 0; i < arrMenuOptions.length; i++) {
            for(int num = 0; num < arrRowData.length; num++){
                if(arrRowData[num].contains(arrMenuOptions[i])) {
                    builder.append(arrRowData[num]).append(", ");
                }
            }
        }
        
        for(int i = 0; i < arrSorted.length - 1; i++)  {
            arrSorted[i] = builder.substring(0, builder.indexOf(","));
            builder.delete(0, builder.indexOf(",")).deleteCharAt(builder.indexOf(","));
        }
                
        String[] arrNumbers = new String[] {
          "1", "2", "3", "4", "5", "6", "7",
            "8", "9", "10"
        };
        
        for(int index = 0; index < arrRowData.length; index++){
            for(int i = 0; i < arrNumbers.length; i++){
                if(arrRowData[index] == null ? arrNumbers[i] == null : arrRowData[index].equals(arrNumbers[i])){
                    arrSorted[arrSorted.length - 1] = "Number of Guests: "+ arrRowData[index];
                }
            }
        }
        return arrSorted;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dskPane = new javax.swing.JDesktopPane();
        jsPane = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dskPane.setBackground(new java.awt.Color(255, 255, 255));

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ));
        jsPane.setViewportView(tblOrder);

        dskPane.setLayer(jsPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout dskPaneLayout = new javax.swing.GroupLayout(dskPane);
        dskPane.setLayout(dskPaneLayout);
        dskPaneLayout.setHorizontalGroup(
            dskPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dskPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jsPane, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
                .addContainerGap())
        );
        dskPaneLayout.setVerticalGroup(
            dskPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dskPaneLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dskPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dskPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDisplayOrderDetailsForKitchenInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDisplayOrderDetailsForKitchenInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDisplayOrderDetailsForKitchenInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDisplayOrderDetailsForKitchenInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDisplayOrderDetailsForKitchenInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane dskPane;
    private javax.swing.JScrollPane jsPane;
    private javax.swing.JTable tblOrder;
    // End of variables declaration//GEN-END:variables
}
